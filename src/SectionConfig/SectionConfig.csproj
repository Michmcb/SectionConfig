<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net6.0;net5.0;netstandard2.0</TargetFrameworks>
	 <LangVersion>latest</LangVersion>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <Version>0.6</Version>
    <Authors>Michael McBride</Authors>
    <Company></Company>
    <Product>SectionConfig</Product>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <Description>A .NET library which allows you to read and write plain-text minimal syntax configuration files. As the name implies, you can have sections and subsections as well.</Description>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageProjectUrl>https://github.com/Michmcb/SectionConfig</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Michmcb/SectionConfig</RepositoryUrl>
    <RepositoryType>Github</RepositoryType>
    <PackageTags>config configuration text</PackageTags>
    <PackageReleaseNotes>- Fixed a bug where reading a duplicate key for a section would cause an InvalidCastException instead of an error message
- Fixed a bug where encountering the end of a stream while reading a value list would cause the State to not be set to Error correctly
- The error message for keys read from a stream with invalid characters will now rpeort the full key name, instead of only the valid portion plus 1 invalid character
- FluentSectionCfgWriter added, to allow for easily writing a file
- More unit tests, 99.1% coverage now</PackageReleaseNotes>
    <PackageIcon>icon.png</PackageIcon>
    <PackageIconUrl />
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="..\icon.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="System.Memory" Version="4.5.4" Condition="'$(TargetFramework)'=='netstandard2.0'" />
  </ItemGroup>
</Project>
